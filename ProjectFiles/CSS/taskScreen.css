:root {
       --taskSepColor: rgb(200, 200, 200);
}

/* ----------------------TASK LIST---------------------- */

.taskList {
       flex-flow: column nowrap;
       margin-left: calc(var(--leftIndent) + 3px);
       width: calc(100% - var(--leftIndent) - 3px);
}

/* ----------------------TASK---------------------- */

.task {
       border-bottom: 2px solid var(--taskSepColor);
       color: var(--primaryColor);
       -webkit-user-select: none;
       user-select: none;
}

/* ----------------------TASK INFO---------------------- */

.task .taskInfo {
       --hoverColor: black;

       display: flex;
       flex-flow: row nowrap;
       font-family: var(--fontFamily);
       font-size: 18px;
       font-weight: 500;
       height: 100%;
       padding: 20px 30px;
       transition: color 0.5s, background 0.2s, font-size 0.4s, padding 0.4s;
}

.task.check .taskInfo {--hoverColor: var(--checkedColor);} /* TASK INFO WHEN CHECKED */

.task .taskInfo:hover:not(:has(.options:hover)) { /* TASK INFO HOVER EFFECT */
       background: rgb(220, 220, 220);
       border-radius: 15px;
       color: var(--hoverColor);
       font-size: 23px;
       padding: 25px 30px;
}

.task .deadline {
       font-size: 11px;
       position: absolute;
       bottom: 0;
       color: gray;
}

.task .options {
       position: relative;
       display: flex;
       justify-content: center;
       align-items: center;

       font-size: 18px;
       color: gray;
       margin-left: auto;
       margin-right: 60px;

       width: 30px;
       height: 30px;
       border-radius: 100%;

       transition: background 0.4s;
}

.task .options:hover {background: rgb(230, 230, 230);}

.task .optionsMenu {
       position: absolute;
       top: 65%;
       right: 60%;
       overflow: hidden;

       z-index: 4;
       box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
       border-radius: 10px;

       opacity: 0;
       pointer-events: none;

       transition: opacity 0.6s;
}

.task .options:hover .optionsMenu {
       opacity: 1;
       pointer-events: auto;
}

.task .optionsMenu > * {
       padding: 10px 25px;
       color: black;
       font-size: 15px;
       background: white;
}

.task .optionsMenu > *:not(:last-child) {
       border-bottom: 1px solid var(--checkedColor);
}

.task .optionsMenu > *:hover {
       background: rgb(230, 230, 230);
}

/* ----------------------CHECKMARK---------------------- */

.checkmark {
       --size: 28px;
       --transitionTime: 0.5s;

       width: var(--size);
       height: var(--size);
       left: -14px;
       transform: translateY(-50%);

       border-radius: 100%;
       overflow: hidden;
}

.checkmark circle {
       cx: 50%;
       cy: 50%;
       r: calc(var(--size) / 2);
       stroke: var(--secondaryColor);
       fill: white;
       stroke-width: 8px;
       
       transition: stroke-width var(--transitionTime);
}

.task.check .checkmark circle {stroke-width: 100%;}

.checkmark path {
       stroke: white;
       stroke-width: 4px;
       fill: none;
       stroke-dasharray: 36;
       stroke-dashoffset: 36;
       stroke-linecap: round;
       transition: stroke-dashoffset var(--transitionTime) var(--checkDelay);
}

.task.check .checkmark path {stroke-dashoffset: 0;}

/* ----------------------TASK TITLE---------------------- */

.task .taskTitle {display: inline-block;}

/* ----------------------CHECK ANIMATION LINE---------------------- */

.task .taskTitle::before {
       content: "";
       transform: translateY(-50%) scaleX(0);
       transform-origin: left;
       height: 0.5px;
       background: var(--checkedColor);
       transition: transform 0.3s ease-in-out;
}

.task.check {color: var(--checkedColor);}

.task.check .taskTitle::before {transform: translateY(-50%) scaleX(1);}

/* ----------------------COMMON---------------------- */

.taskList, .checkmark {display: flex;}

.task, .task .taskTitle {position: relative;}

.task, .checkmark {cursor: pointer;}

.task .taskInfo, .task .taskTitle::before {width: 100%;}

.checkmark, .checkmark .checkOverlay, .checkmark i, .task .taskTitle::before {position: absolute;}

.checkmark, .task .taskTitle::before {top: 50%;}

.checkmark, .checkmark .innerCircle {border-radius: 100%;}

.checkmark .innerCircle, .checkmark i {transition: var(--transitionTime);}